#!/bin/bash
#
# Update master in the current dir by pulling from origin or the given remote.
# Before pulling, stash any work in progress, and stash-pop it back once done, thus restoring
# the original state of the working directory.
#
# It also handles any "abnormal" termination like CTRL-C: in such cases it will stash back.
#
# Usage: $0 [remote_name]
# 
# Detailed sequence of steps:
#  - stash
#  - co master
#  - pull $REMOTE master
#  - co $ORIGINAL_BRANCH
#  - stash pop
#

# configurable vars
DEFAULT_REMOTE=origin


# internal vars
[ -n "$1" ] && REMOTE=$1 || REMOTE=$DEFAULT_REMOTE

. $( dirname ${BASH_SOURCE[0]} )/git_functions.sh  || {
  echo -e "\n\tERR: cannot import git_functions.sh. Exiting\n"
  exit 1
}



if [ ! -e ".git" ] ; then
  echo "the current dir is not versioned by git"
  exit 1
fi

git status &&
git_save_state &&
git co master &&
git pull "$REMOTE" master
if [ $? -ne 0 ] ; then
  ERR_GIT_PULL=1
fi
git_restore_state
if [ $? -ne 0 ] ; then
  ERR_GIT_RESTORE=1
fi


## finally report any error occured
echo
if [ -n "$ERR_GIT_PULL" ] ; then
  echo " **** WARNING ****"
  echo "errors occured during git pull"
fi
if [ -n "$ERR_GIT_RESTORE" ] ; then
  echo " **** WARNING ****"
  echo "errors occured during git restore"
fi

echo

exit 0
